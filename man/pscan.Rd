% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Scan_and_post_processing.R
\name{pscan}
\alias{pscan}
\title{Executes the Pscan algorithm on a set of regulatory sequences.}
\usage{
pscan(x, pfms, BPPARAM = bpparam(), BPOPTIONS = bpoptions())
}
\arguments{
\item{x}{A `DNASetString` object containing the set of regulatory sequences 
from co-regulated or co-expressed genes (i.e. a set of gene promoters). 
See the Biostrings package for details.}

\item{pfms}{A `PSMatrixList` object containing PWMs and background statistics. 
See \code{\link{ps_build_bg}}, \code{\link{ps_retrieve_bg_from_file}}, 
\code{\link{ps_build_bg_from_table}} for how to create `PSMatrixList` 
objects that contain background statistics. For background statistics we
refer to the standard deviation and average of scores when the background 
(all the promoters expressed in a organism) is scanned with the position 
weight matrices. This is used to assert the statistical enrichment to 
determine the statistical enrichment of motif occurrences in coexpressed 
or coregulated promoter sequences compared to the background.}

\item{BPPARAM}{The BPPARAM used by bplapply. See BiocParallel package.
This argument is passed to `BiocParallel::bplapply`.
If BPPARAM is not explicitly set, the default value (bpparam()) will be 
used, which automatically chooses a sensible parallelization method based 
on the user's system. 
You can specify BPPARAM = BiocParallel::SnowParam(8) on all operating 
systems, or BPPARAM = BiocParallel::MulticoreParam(8) on Unix-like
systems to use, for example, 8 cores.}

\item{BPOPTIONS}{The BPOPTIONS used by bplapply. See BiocParallel package.
This argument is passed to `BiocParallel::bplapply`. 
The default is `bpoptions()`.
Some useful tasks: bpoptions(progressbar = TRUE, log = TRUE). 
progressbar = TRUE enables a progress bar that can be useful when 
processing many tasks. log = TRUE enable logging to debug each step of
the parallel tasks.}
}
\value{
A `PSMatrixList` object in which the foreground values (the alignment scores)
have been computed for each sequence in `x` based on the position weight 
matrices in `pfms`.
}
\description{
This function computes the alignment scores between regulatory sequences 
(a set of gene promoters (`x` parameter)) and position weight matrices, which 
quantify potential binding affinities of transcription factors in that region. 
This is done throughout the Pscan algorithm.
}
\details{
The `pscan` function performs sequence scanning using the `ps_scan` method for 
individual PWMs, accounting for both the forward and reverse complement strands,
ensuring no potential binding sites are missed.
}
\examples{

file_path <- system.file("extdata", "prom_seq.rds", package = "PscanR")
prom_seq <- readRDS(file_path)
prom_seq <- prom_seq[1:10]

# Retrieve Background PWMs
J2020_PSBG <- generate_psmatrixlist_from_background('Jaspar2020', 'hs', c(-200,50), 'hg38')

# Execute the PScan algorithm
results <- pscan(prom_seq, J2020_PSBG, 
                 BPPARAM = BiocParallel::SnowParam(1))
# Use MulticoreParam() for Unix systems (See BiocParallel package). 

ps_results_table(results)

}
