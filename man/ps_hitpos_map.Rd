% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Scan_and_post_processing.R
\name{ps_hitpos_map}
\alias{ps_hitpos_map}
\title{Pscan Hits Position Heatmap}
\usage{
ps_hitpos_map(pfms, FDR = 0.01, shift = 0, ...)
}
\arguments{
\item{pfms}{A `PSMatrixList` object containing multiple PWMs and associated 
metadata (foreground and background statistics). Typically is the output 
of `pscan()` function.}

\item{FDR}{Numeric. False Discovery Rate (FDR) threshold to select the TFs
to be included in the analysis. The default is set to `0.01`.}

\item{shift}{Numeric. A value to shift the positions of hits. 
Default is set to `0`.}

\item{...}{Additional user defined arguments that can be passed to 
the function (e.g., the color palette) to change the default settings.}
}
\value{
A heatmap plot showing positional hits distribution for selected 
   transcription factors.
}
\description{
This function creates a heatmap visualizing the positional distribution
of hits based on a specified false discovery rate threshold.
}
\details{
The function performs the following steps: 
\itemize{
  \item Extracts the result table from the pscan algorithm result.
  \item Filters the result table based on the given FDR threshold.
  \item Creates a positional hits matrix.
  \item Generates the heatmap using the `pheatmap` function, 
     with costumizable settings.}

Default settings, that can be changed by the users, are:
\itemize{
  \item `cluster_rows` and `cluster_cols` set to `TRUE`.
  \item `color` uses a white-yellow-red palette.
  \item The main `Pscan Hits Position Heatmap`.
  }
}
\examples{
file_path <- system.file("extdata", "prom_seq.rds", package = "PscanR")
prom_seq <- readRDS(file_path)
prom_seq <- prom_seq[1:50]

# Load JASPAR motif matrices for vertebrates
J2020_path <- system.file("extdata", "J2020.rda", package = "PscanR")
load(J2020_path)

bg_path <- system.file("extdata", "J2020_hg38_200u_50d_UCSC.psbg.txt", 
                       package = "PscanR")
J2020_PSBG <- ps_build_bg_from_file(bg_path, J2020)

# Execute the Pscan algorithm and view the result table
results <- pscan(prom_seq, J2020_PSBG, 
                 BPPARAM = BiocParallel::MulticoreParam(1))
# Use `SnowParam` on windows
ps_hitpos_map(results)


}
